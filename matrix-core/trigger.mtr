;;; -*- Mode: LISP; Syntax: Common-Lisp; Package: LKB; Coding: utf-8 -*-

;;; SSH 2012-03-27 This file contains trigger rules for semantically
;;; empty lexical entries. The trigger rules themselves should be in
;;; this file. There are three types of semantically empty items in
;;; the customized grammars; (i) auxiliaries without predicate
;;; (e.g. ta_end in Japanese), (ii) case-marking adpositions (e.g. the
;;; nominative marker ga in Japanese), and (iii) Y/N-question
;;; particles. Copulas are also regarded as semantically empty lexical
;;; entries, but the current system does not customize copulas on the
;;; live site.

;;; Before using this file, mtr.tdl should be loaded by
;;; lkb/script. Uncomment the lines which include (i) mtr.tdl and (ii)
;;; trigger.mtr in lkb/script.

;;; The documentation on trigger rules:
;;; http://moin.delph-in.net/LkbGeneration

;;; The following loop automatically generates and lists rules for all
;;; semantically empty items that do not already have trigger rules.

; (loop
;      with *package* = (find-package :lkb)
;      for id in mrs::*empty-semantics-lexical-entries*
;      do
;      (unless (or #+:mt
;                  (gethash id mt::*transfer-triggers*)
;                  (member id mrs::*gen-rule-ids*))
;        (format
;         t
;         "~(~a~)_gr := arg0e_gtr &~%~
;          [ CONTEXT [ RELS <! [ PRED \"non_existing_rel\" ] !> ],~%  ~
;            FLAGS.TRIGGER \"~(~a~)\" ].~%~%"
;         id id)))

;;; If the above loop is executed on the LKB prompt, trigger rules
;;; like the following are automatically produced and presented (XXX
;;; stands for the name of each lexical entry).

; XXX_gr := arg0e_gtr &
; [ CONTEXT [ RELS <! [ PRED "non_existing_rel" ] !> ],
;   FLAGS.TRIGGER "XXX" ].

;;; 
;;; Sematically empty items that users specify on the customization
;;; system are already listed as follows.
;;; 

;;; Semantically Empty Lexical Entries

