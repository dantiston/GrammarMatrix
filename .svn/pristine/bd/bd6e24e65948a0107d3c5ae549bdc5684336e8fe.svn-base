
;;; Nouns

klb := masc-im-noun-lex &
  [ STEM < "klb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_dog_n_rel" ] .

mkwnit := fem-wt-noun-lex &
  [ STEM < "mkwnit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_car_n_rel" ] .

xtwl := masc-im-noun-lex &
  [ STEM < "xtwl" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cat_n_rel" ] .

zkwkit := fem-wt-noun-lex &
  [ STEM < "zkwkit" >,
    SYNSEM.LKEYS.KEYREL.PRED "_glass_n_rel" ] .

;;; Verbs
;;; It seems that there is no way of making the lexical items look as follows 
;;;
;;; ien := intransitive-verb-lex & verb-present-tense-f-sg-suffix-type-h &
;;;  [ STEM < "ien" >,
;;;    SYNSEM.LKEYS.KEYREL.PRED "_sleep_v_rel" ] .
;;; 
;;; This violates the condition of a unique greatest lower bound
;;; although I am not sure how this happens in a file in which there is no more than one lexical item per pair of types

ikl := h-raising-verb-with-infinitive-complement &
  [ STEM < "ikl" >,
    SYNSEM.LKEYS.KEYREL.PRED "_can_v_rel" ] .

ien := h-intransitive-verb-lex &
  [ STEM < "ien" >,
    SYNSEM.LKEYS.KEYREL.PRED "_sleep_v_rel" ] .

;;This means that it will do obj drop
akl := t-transitive-verb-lex &
  [ STEM < "akl" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eat_v_rel" ] .

idy := t-clause-embedding-verb-lex &
  [ STEM < "idy" >,
    SYNSEM.LKEYS.KEYREL.PRED "_know_v_rel" ] .

xeb := t-declarative-clause-embedding-verb-lex &
  [ STEM < "xeb" >,
    SYNSEM.LKEYS.KEYREL.PRED "_think_v_rel" ] .

eal := t-interrogative-clause-embedding-verb-lex &
  [ STEM < "eal" >,
    SYNSEM.LKEYS.KEYREL.PRED "_ask_v_rel" ] .

nzq := h-dative-transitive-with-optional-object-verb-lex &
  [ STEM < "nzq" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hurt_v_rel" ] .

;; this is temporary fakery to handle pronouns versus pps
rdp_1 := t-with-pp-acc-verb-lex &
  [ STEM < "rdp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chase_v_rel" ] .

rdp_2 := t-with-pronoun-object-verb-lex &
  [ STEM < "rdp" >,
    SYNSEM.LKEYS.KEYREL.PRED "_chase_v_rel" ] .


;;; Case-marking adpositions

at-acc-marker := acc-case-marker-p-lex &
   [ STEM < "at" > ,
     SYNSEM.LOCAL.CAT.HEAD.CASE acc,
     SYNSEM.LOCAL.CAT.HEAD.FORM p-at ].

l-dat-pp-marker := case-marker-p-lex &
   [ STEM < "l" > ,
     SYNSEM.LOCAL.CAT.HEAD.CASE dat,	
     SYNSEM.LOCAL.CAT.HEAD.FORM p-dat-l ].

;; This is for "The dog chased the cat" which in Hebrew is "The dog chased after the cat"
;; We will for now say that this is an accusative PP as opposed to the same preposition when it appears
;; in sentences such as "The dog slept after lunch", in which case it is a different ttype of case, but may have to revise this

axri-acc-pp-marker := case-marker-p-lex &
  [ STEM < "axri" >,
    SYNSEM.LOCAL.CAT.HEAD.FORM p-acc-axri,
    SYNSEM.LOCAL.CAT.HEAD.CASE acc-axri ] .

;;;Pronouns

;;;need to figure this pronoun out - it/this?
zh_pronoun := demonstrative-pronoun-lex &
        [ STEM < "zh" >,
          SYNSEM.LKEYS.KEYREL.PRED "_pronoun_n_rel",
          SYNSEM.LKEYS.ALTKEYREL.PRED proximal+dem_a_rel,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON it_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
			CONT.HOOK.INDEX.PNG [ GEND masc,
					      PER third,
					      NUM sg ] ] ].

;;

ani := personal-pronoun-lex &
        [ STEM < "ani" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
                        CONT.HOOK.INDEX.PNG [ PER first,
					      NUM sg ] ] ].
ath := personal-pronoun-lex &
        [ STEM < "ath" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
                        CONT.HOOK.INDEX.PNG [ PER second,
					       NUM sg,
                                               GEND masc ] ] ].
at := personal-pronoun-lex &
        [ STEM < "at" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
                                          CONT.HOOK.INDEX.PNG [ PER second,
				                      	        NUM sg,
                                                                GEND fem ] ] ].
hwa := personal-pronoun-lex &
        [ STEM < "hwa" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
                        CONT.HOOK.INDEX.PNG [ PER third,
					      NUM sg,
					      GEND masc ] ] ].
hia := personal-pronoun-lex &
        [ STEM < "hia" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM sg,
					      GEND fem ] ] ].
anxnw := personal-pronoun-lex &
        [ STEM < "anxnw" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
			CONT.HOOK.INDEX.PNG [ PER first,
					      NUM non-sg ] ] ].
atm := personal-pronoun-lex &
        [ STEM < "atm" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM non-sg,
					      GEND masc ] ] ].
atn := personal-pronoun-lex &
        [ STEM < "atn" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM non-sg,
					      GEND fem ] ] ].
hm := personal-pronoun-lex &
        [ STEM < "hm" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM non-sg,
					      GEND masc ] ] ].
hn := personal-pronoun-lex &
        [ STEM < "hn" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE nom,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM non-sg,
					      GEND fem ] ] ].
awti := personal-pronoun-lex &
        [ STEM < "awti" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER first,
					      NUM sg ] ] ].
awtk_M := personal-pronoun-lex &
        [ STEM < "awtk" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM sg,
					      GEND masc ] ] ].
awtk_F:= personal-pronoun-lex &
        [ STEM < "awtk" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM sg,
					      GEND fem ] ] ].
awtw := personal-pronoun-lex &
        [ STEM < "awtw" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM sg,
					      GEND masc ] ] ].
awth := personal-pronoun-lex &
        [ STEM < "awth" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM sg,
					      GEND fem ] ] ].
awtnw := personal-pronoun-lex &
        [ STEM < "awtnw" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER first,
					      NUM non-sg ] ] ].
awtkm := personal-pronoun-lex &
        [ STEM < "awtkm" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM non-sg,
					      GEND masc ] ] ].
awtkn := personal-pronoun-lex &
        [ STEM < "awtkn" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM non-sg,
					      GEND fem ] ] ].
awtm := personal-pronoun-lex &
        [ STEM < "awtm" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM non-sg,
					      GEND masc ] ] ].
awtn := personal-pronoun-lex &
        [ STEM < "awtn" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM non-sg,
					      GEND fem ] ] ].

;dative

li := personal-pronoun-lex &
        [ STEM < "li" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
                        CONT.HOOK.INDEX.PNG [ PER first,
					      NUM sg ] ] ].
lk_M := personal-pronoun-lex &
        [ STEM < "lk" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
                        CONT.HOOK.INDEX.PNG [ PER second,
					       NUM sg,
                                               GEND masc ] ] ].
lk_F := personal-pronoun-lex &
        [ STEM < "lk" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
                                          CONT.HOOK.INDEX.PNG [ PER second,
				                      	        NUM sg,
                                                                GEND fem ] ] ].
lw := personal-pronoun-lex &
        [ STEM < "lw" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
                        CONT.HOOK.INDEX.PNG [ PER third,
					      NUM sg,
					      GEND masc ] ] ].
lh := personal-pronoun-lex &
        [ STEM < "lh" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM sg,
					      GEND fem ] ] ].
lnw := personal-pronoun-lex &
        [ STEM < "lnw" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
			CONT.HOOK.INDEX.PNG [ PER first,
					      NUM non-sg ] ] ].
lkm := personal-pronoun-lex &
        [ STEM < "lkm" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM non-sg,
					      GEND masc ] ] ].
lkn := personal-pronoun-lex &
        [ STEM < "lkn" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM non-sg,
					      GEND fem ] ] ].
lhm := personal-pronoun-lex &
        [ STEM < "lhm" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM non-sg,
					      GEND masc ] ] ].
lhn := personal-pronoun-lex &
        [ STEM < "lhn" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM non-sg,
					      GEND fem ] ] ].

;after-acc

axri := personal-pronoun-lex &
        [ STEM < "axri" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc-axri,
                        CONT.HOOK.INDEX.PNG [ PER first,
					      NUM sg ] ] ].
axrik_M := personal-pronoun-lex &
        [ STEM < "axrik" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc-axri,
                        CONT.HOOK.INDEX.PNG [ PER second,
					       NUM sg,
                                               GEND masc ] ] ].
axrik_F := personal-pronoun-lex &
        [ STEM < "axrik" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc-axri,
                                          CONT.HOOK.INDEX.PNG [ PER second,
				                      	        NUM sg,
                                                                GEND fem ] ] ].
axriw := personal-pronoun-lex &
        [ STEM < "axriw" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc-axri,
                        CONT.HOOK.INDEX.PNG [ PER third,
					      NUM sg,
					      GEND masc ] ] ].
axrih := personal-pronoun-lex &
        [ STEM < "axrih" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc-axri,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM sg,
					      GEND fem ] ] ].
axrinw := personal-pronoun-lex &
        [ STEM < "axrinw" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc-axri,
			CONT.HOOK.INDEX.PNG [ PER first,
					      NUM non-sg ] ] ].
axrikm := personal-pronoun-lex &
        [ STEM < "axrikm" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE dat,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM non-sg,
					      GEND masc ] ] ].
axrikn := personal-pronoun-lex &
        [ STEM < "axrikn" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc-axri,
			CONT.HOOK.INDEX.PNG [ PER second,
					      NUM non-sg,
					      GEND fem ] ] ].
axrihm := personal-pronoun-lex &
        [ STEM < "axrihm" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc-axri,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM non-sg,
					      GEND masc ] ] ].
axrihn := personal-pronoun-lex &
        [ STEM < "axrihn" >,
	  SYNSEM.LOCAL.CAT.HEAD.PROPER_PRONOUN_COMMON personal_pronoun,
          SYNSEM.LOCAL [CAT.HEAD.CASE acc-axri,
			CONT.HOOK.INDEX.PNG [ PER third,
					      NUM non-sg,
					      GEND fem ] ] ].

;;; Other

;ind-adv := neg-adv-lex &
;  [ STEM < "ind-adv" >,
;    SYNSEM.LKEYS.KEYREL.PRED "_neg_r_rel" ] .

h-am := main-interrogative-complementizer-lex-item &
  [ STEM < "h-am" > ] .

alh := proximal-demonstrative-adj-lex & 
   [ STEM < "alh" >,
     INFLECTED -,
     SYNSEM.LKEYS.KEYREL.PRED proximal+dem_a_rel,
     SYNSEM.LOCAL.CAT.HEAD.MOD < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM non-sg ] ] > ]. 

zat := proximal-demonstrative-adj-lex &
   [ STEM < "zat" >,
     INFLECTED -,
     SYNSEM.LKEYS.KEYREL.PRED proximal+dem_a_rel,
     SYNSEM.LOCAL.CAT.HEAD.MOD < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
							       GEND fem ] ] > ].

zh := proximal-demonstrative-adj-lex &
   [ STEM < "zh" >,
     INFLECTED -,
     SYNSEM.LKEYS.KEYREL.PRED proximal+dem_a_rel,
     SYNSEM.LOCAL.CAT.HEAD.MOD < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
							       GEND masc ] ] > ].

ryb := non-demonstrative-adj-lex &
   [ STEM < "ryb" >,
     INFLECTED -,
     SYNSEM.LOCAL.CAT.HEAD.VERB-PRESENT-TENSE-SG-F-SUFFIX-TYPE h-suffix,
     SYNSEM.LKEYS.KEYREL.PRED "_hungry_a_rel"].


e := embedded-declarative-complementizer-lex-item &
      [ STEM < "e" >,
	SYNSEM.LOCAL.CAT.HEAD.COMPLEMENTIZER-TYPE embedded-declarative-complementizer ].

am := embedded-interrogative-complementizer-lex-item &
      [ STEM < "am" >,
        SYNSEM.LOCAL.CAT.HEAD.COMPLEMENTIZER-TYPE embedded-interrogative-complementizer ].

;;;Adverbs

mhr := adverb-lex &
   [ STEM < "mhr" >, 
     SYNSEM.LKEYS.KEYREL.PRED "_quickly_r_rel" ].


la := neg-adv-lex &
  [ STEM < "la" >,
    SYNSEM.LKEYS.KEYREL.PRED "_neg_r_rel" ] .


;OTHER
w_1 := conj-lex &
  [ STEM < "w" >,
    SYNSEM.LKEYS.KEYREL.PRED "_and_coord_rel",
    CFORM "1" ] .

