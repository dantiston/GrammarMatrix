;;; Nouns

I-nom := pronoun-lex &
  [ STEM < "njaaan" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE nom,
                   CONT.HOOK.INDEX [ PNG [ PER first, 
                                           NUM sg,
                                           GEND human ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ] .

I-acc := pronoun-lex &
  [ STEM < "enne" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE acc,
                   CONT.HOOK.INDEX [ PNG [ PER first, 
                                           NUM sg,
                                           GEND human ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

I-dat := pronoun-lex &
  [ STEM < "enikkx" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE dat,
                   CONT.HOOK.INDEX [ PNG [ PER first, 
                                           NUM sg,
                                           GEND human ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

he-nom := pronoun-lex &
  [ STEM < "avan" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE nom,
                   CONT.HOOK.INDEX [ PNG [ PER third, 
                                           NUM sg,
                                           GEND masc ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

he-acc := pronoun-lex &
  [ STEM < "avane" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE acc,
                   CONT.HOOK.INDEX [ PNG [ PER third, 
                                           NUM sg,
                                           GEND masc ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

he-dat := pronoun-lex &
  [ STEM < "avannx" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE dat,
                   CONT.HOOK.INDEX [ PNG [ PER third, 
                                           NUM sg,
                                           GEND masc ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

she-nom := pronoun-lex &
  [ STEM < "avala" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE nom,
                   CONT.HOOK.INDEX [ PNG [ PER third, 
                                           NUM sg,
                                           GEND fem ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

she-acc := pronoun-lex &
  [ STEM < "avalae" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE acc,
                   CONT.HOOK.INDEX [ PNG [ PER third, 
                                           NUM sg,
                                           GEND fem ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

she-dat := pronoun-lex &
  [ STEM < "avalakkx" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE dat,
                   CONT.HOOK.INDEX [ PNG [ PER third, 
                                           NUM sg,
                                           GEND masc ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

you-nom := pronoun-lex &
  [ STEM < "nii" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE nom,
                   CONT.HOOK.INDEX [ PNG [ PER second],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

you-acc := pronoun-lex &
  [ STEM < "ninne" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE acc,
                   CONT.HOOK.INDEX [ PNG [ PER second],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

you-dat := pronoun-lex &
  [ STEM < "ninakkx" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE dat,
                   CONT.HOOK.INDEX [ PNG [ PER second],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

you-nom-pl := pronoun-lex &
  [ STEM < "ningangala" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE nom,
                   CONT.HOOK.INDEX [ PNG [ PER second,
                                           NUM non-sg ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

they-nom := pronoun-lex &
  [ STEM < "avar" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE nom,
                   CONT.HOOK.INDEX [ PNG [ PER third, 
                                           NUM non-sg],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

it := pronoun-lex &
  [ STEM < "atx" >,
    SYNSEM.LOCAL [ CAT.HEAD.CASE nom,
                   CONT.HOOK.INDEX [ PNG [ PER third, 
                                           NUM sg,
                                           GEND neut ],
                                     COG-ST activ-or-more & [ SPECI + ] ] ] ].

;who-dat := pronoun-lex &
;  [ STEM < "aarkkx" >,
;    SYNSEM.LOCAL [ CAT.HEAD.CASE dat,
;                   CONT.HOOK.INDEX.COG-ST activ-or-more & [SPECI +]  ] ] .


book := common-noun-lex &
  [ STEM < "pustakam" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_book_n_rel",
    INFLECTED - ] .

bribe := common-noun-lex &
  [ STEM < "koozhaa" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_bribe_n_rel",
    INFLECTED - ] .

car := common-noun-lex &
  [ STEM < "kaar" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_car_n_rel",
    INFLECTED - ] .

cat := common-noun-lex &
  [ STEM < "puucca" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND anim ],
    SYNSEM.LKEYS.KEYREL.PRED "_cat_n_rel",
    INFLECTED - ] .

child := common-noun-lex &
  [ STEM < "kutatai" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_child_n_rel",
    INFLECTED - ] .

boy := common-noun-lex &
  [ STEM < "monu" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_boy_n_rel",
    INFLECTED - ] .

girl := common-noun-lex &
  [ STEM < "molu" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_girl_n_rel",
    INFLECTED - ] .


curry := common-noun-lex &
  [ STEM < "kari" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ],
    SYNSEM.LKEYS.KEYREL.PRED "_food_n_rel",
    INFLECTED - ] .

doctor := common-noun-lex &
  [ STEM < "daooktaar" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_doctor_n_rel",
    INFLECTED - ] .

dog := common-noun-lex &
  [ STEM < "patti" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND anim ],
    SYNSEM.LKEYS.KEYREL.PRED "_dog_n_rel",
    INFLECTED - ] .

driver := common-noun-lex &
  [ STEM < "daraivar" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_driver_n_rel",
    INFLECTED - ] .

fire := common-noun-lex &
  [ STEM < "tiiyyx" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_fire_n_rel",
    INFLECTED - ] .

glass := common-noun-lex &
  [ STEM < "kannadi" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_glass_n_rel",
    INFLECTED - ] .

grass := common-noun-lex &
  [ STEM < "pullx" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ],
    SYNSEM.LKEYS.KEYREL.PRED "_grass_n_rel",
    INFLECTED - ] .

Hanifa := common-noun-lex &
  [ STEM < "Hanifa" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_hanifa_n_rel",
    INFLECTED - ] .

house := common-noun-lex &
  [ STEM < "viitatail" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_house_n_rel",
    INFLECTED - ] .

king := common-noun-lex &
  [ STEM < "raajaavx" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_king_n_rel",
    INFLECTED - ] .

Krishnan := common-noun-lex &
  [ STEM < "kr^shanaane" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_Krishnan_n_rel",
    INFLECTED - ] .

Kumar := common-noun-lex &
  [ STEM < "kumaar" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_kumar_n_rel",
    INFLECTED - ] .

man := common-noun-lex &
  [ STEM < "purusan" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_man_n_rel",
    INFLECTED - ] .

Madhavan := common-noun-lex &
  [ STEM < "maadhavane" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_Madhavan_n_rel",
    INFLECTED - ] .

milk := common-noun-lex &
  [ STEM < "paal" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_milk_n_rel",
    INFLECTED - ] .

mother := common-noun-lex &
  [ STEM < "amma" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_mother_n_rel",
    INFLECTED - ] .

noise := common-noun-lex &
  [ STEM < "saabdam" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_noise_n_rel",
    INFLECTED - ] .

person := common-noun-lex &
  [ STEM < "aalaukala" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_person_n_rel",
    INFLECTED - ] .

Raghavan := common-noun-lex &
  [ STEM < "raaghavan" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_raghavan_n_rel",
    INFLECTED - ] .

rice := common-noun-lex &
  [ STEM < "coorax" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_rice_n_rel",
    INFLECTED - ] .

ripe_banana := common-noun-lex &
  [ STEM < "pazhaam" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_fruit_n_rel",
    INFLECTED - ] .

snakes := common-noun-lex &
  [ STEM < "paampine" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ NUM non-sg,
                                       GEND anim ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_snake_n_rel",
    INFLECTED + ] .

tea := common-noun-lex &
  [ STEM < "caaya" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ],
    SYNSEM.LKEYS.KEYREL.PRED "_tea_n_rel",
    INFLECTED - ] .

teacher := common-noun-lex &
  [ STEM < "taiiccar" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_teacher_n_rel",
    INFLECTED - ] .

table_on := common-noun-lex &
  [ STEM < "meesaameel" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND neut ] ,
    SYNSEM.LKEYS.KEYREL.PRED "_table_n_rel",
    INFLECTED - ] .

woman := common-noun-lex &
  [ STEM < "strii" >,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ GEND human ],
    SYNSEM.LKEYS.KEYREL.PRED "_woman_n_rel",
    INFLECTED - ] .

;;; Verbs

eatAMeal := transitive-verb-lex &
  [ STEM < "unana" >,
    SYNSEM.LKEYS.KEYREL.PRED "_eatAMeal_v_rel",
    INFLECTED - ] .

be-1 := transitive-verb-lex &
  [ STEM < "aanax" >,
    SYNSEM.LKEYS.KEYREL.PRED "_be_v_rel",
    INFLECTED - ] .

be-2 := transitive-verb-lex &
  [ STEM < "untaayir" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_be_v_rel" ],
    INFLECTED - ] .

be-not := transitive-verb-lex &
  [ STEM < "alla" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_be-not_v_rel" ],
    INFLECTED + ] .

fear := transitive-verb-lex &
  [ STEM < "bhayappeta" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fear_v_rel" ],
    INFLECTED - ] .

call := transitive-verb-lex &
  [ STEM < "vilaicc" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_call_v_rel" ],
    INFLECTED - ] .

buy := transitive-verb-lex &
  [ STEM < "vaanganga" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_buy_v_rel" ],
    INFLECTED - ] .

bear := transitive-verb-lex &
  [ STEM < "sahikka" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_bear_v_rel" ],
    INFLECTED - ] .

take := transitive-verb-lex &
  [ STEM < "etautt" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take_v_rel" ],
    INFLECTED - ] .

take2 := transitive-verb-lex &
  [ STEM < "vaanganga" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_take2_v_rel" ],
    INFLECTED - ] .

hurt := transitive-verb-lex &
  [ STEM < "viiddica" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hurt_v_rel" ],
    INFLECTED - ] .

hit := transitive-verb-lex &
  [ STEM < "itaikkuka" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_hit_v_rel" ],
    INFLECTED - ] .

love := transitive-verb-lex &
  [ STEM < "eevam" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_love_v_rel" ],
    INFLECTED - ] .

want := transitive-subjdat-objopt-verb-lex &
  [ STEM < "veenaam" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_want_v_rel" ],
    INFLECTED - ] .

eat := transitive-subjdat-objopt-verb-lex &
  [ STEM < "tinnuka" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_eat_v_rel" ],
    INFLECTED - ] .

gave1 := ditransitive-verb-lex &
  [ STEM < "tann" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_give_v_rel" ],
    INFLECTED - ] .

gave2 := ditransitive-verb-lex &
  [ STEM < "kotautata" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_give_v_rel" ],
    INFLECTED - ] .

tell := ditransitive-verb-lex &
  [ STEM < "paraya" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_tell_v_rel" ],
    INFLECTED - ] .

go := intransitive-verb-lex &
  [ STEM < "poo" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_go_v_rel" ],
    INFLECTED - ] .

come := intransitive-verb-lex &
  [ STEM < "varu" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_v_rel" ],
    INFLECTED - ] .

come2 := intransitive-verb-lex &
  [ STEM < "vann" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_come_v_rel" ],
    INFLECTED - ] .

feel_cold := intransitive-verb-lex &
  [ STEM < "tanaukk" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_feel_cold_v_rel" ],
    INFLECTED - ] .

feel_hungry := intransitive-verb-lex &
  [ STEM < "visaakk" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_feel_hungry_v_rel" ],
    INFLECTED - ] .

fall := intransitive-verb-lex &
  [ STEM < "viizhauka" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_fall_v_rel" ],
    INFLECTED - ] .

sit := intransitive-verb-lex &
  [ STEM < "irikkuka" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sit_v_rel" ],
    INFLECTED - ] .

jump := intransitive-verb-lex &
  [ STEM < "caata" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_jump_v_rel" ],
    INFLECTED - ] .

sleep := intransitive-verb-lex &
  [ STEM < "urananauka" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_sleep_v_rel" ],
    INFLECTED - ] .

play := intransitive-verb-lex &
  [ STEM < "kalaikkuka" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_play_v_rel" ],
    INFLECTED - ] .

see := prop-embed-verb-lex &
  [ STEM < "kanata" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_see_v_rel" ],
    INFLECTED - ] .

know := prop-embed-verb-lex &
  [ STEM < "ariy" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_know_v_rel" ],
    INFLECTED - ] .

ask := ques-embed-verb-lex &
  [ STEM < "coodicc" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_ask_v_rel" ],
    INFLECTED - ] .

think := prop-embed-verb-lex &
  [ STEM < "vicaarikkuka" >,
    SYNSEM [ LKEYS.KEYREL.PRED "_think_v_rel" ],
    INFLECTED - ] .



;;; adverbs
badly := adverb-lex &
  [ STEM < "ciittayaayi" >,
    SYNSEM.LKEYS.KEYREL.PRED "_badly_q_rel" ] .

cold := adverb-lex &
  [ STEM < "thanuppundu" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cold_q_rel" ] .

now := adverb-lex &
  [ STEM < "ini" >,
    SYNSEM.LKEYS.KEYREL.PRED "_now_q_rel" ] .

quickly := adverb-lex &
  [ STEM < "veegam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_quickly_q_rel" ] .

today := adverb-lex &
  [ STEM < "innx" >,
    SYNSEM.LKEYS.KEYREL.PRED "_today_q_rel" ] .


;;; adjective
bad := adjective-lex &
  [ STEM < "ciitta" >,
    SYNSEM.LKEYS.KEYREL.PRED "_bad_a_rel",
    INFLECTED - ] .

big := adjective-lex &
  [ STEM < "valiya" >,
    SYNSEM.LKEYS.KEYREL.PRED "_big_a_rel",
    INFLECTED - ] .

good := adjective-lex &
  [ STEM < "nalla" >,
    SYNSEM.LKEYS.KEYREL.PRED "_good_a_rel",
    INFLECTED - ] .

long := adjective-lex &
  [ STEM < "niilaamulalaa" >,
    SYNSEM.LKEYS.KEYREL.PRED "_long_a_rel",
    INFLECTED - ] .

new := adjective-lex &
  [ STEM < "putiya" >,
    SYNSEM.LKEYS.KEYREL.PRED "_new_a_rel",
    INFLECTED - ] .

old := adjective-lex &
  [ STEM < "pazhaya" >,
    SYNSEM.LKEYS.KEYREL.PRED "_old_a_rel",
    INFLECTED - ] .

red := adjective-lex &
  [ STEM < "cuvappx" >,
    SYNSEM.LKEYS.KEYREL.PRED "_red_a_rel",
    INFLECTED - ] .

short := adjective-lex &
  [ STEM < "kuriya" >,
    SYNSEM.LKEYS.KEYREL.PRED "_short_a_rel",
    INFLECTED - ] .

small := adjective-lex &
  [ STEM < "ceriya" >,
    SYNSEM.LKEYS.KEYREL.PRED "_small_a_rel",
    INFLECTED - ] .

;;; Other
a := determiner-lex &
  [ STEM < "oru" >,
    SYNSEM [ LOCAL.CONT.HOOK.INDEX.COG-ST type-id,
             LKEYS.KEYREL.PRED "_a_d_rel" ] ] .

this := determiner-lex &
  [ STEM < "ii" >,
    SYNSEM [ LOCAL.CONT.HOOK.INDEX.COG-ST activ+fam,
             LKEYS.KEYREL.PRED "_this_d_rel" ] ] .

that := determiner-lex &
  [ STEM < "aa" >,
    SYNSEM [ LOCAL.CONT.HOOK.INDEX.COG-ST activ+fam,
             LKEYS.KEYREL.PRED "_that_d_rel" ] ] .

many := determiner-lex &
  [ STEM < "valare" >,
    SYNSEM [ LOCAL.CONT.HOOK.INDEX.COG-ST uniq-id,
             LKEYS.KEYREL.PRED "_many_d_rel" ] ] .

all := determiner-lex &
  [ STEM < "ellaam" >,
    SYNSEM [ LOCAL.CONT.HOOK.INDEX.COG-ST uniq-id,
             LKEYS.KEYREL.PRED "_all_d_rel" ] ] .

;;; Not sure what the difference is between these - both are present in the book.
all2 := determiner-lex &
  [ STEM < "ellaavarum" >,
    SYNSEM [ LOCAL.CONT.HOOK.INDEX.COG-ST uniq-id,
             LKEYS.KEYREL.PRED "_all_d_rel" ] ] .

;;; Case-marking adpositions

;obj-marker := case-marker-p-lex &
;  [ STEM < "ye" >,
;    SYNSEM.LOCAL.CAT.HEAD.FORM p-acc ] .

