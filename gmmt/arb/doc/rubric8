---------------------------------------------------
Comments

You are getting two parses for 

 la:   y-yuga-ni:
 not   3MSG(it)-hurts-me
 'It doesn't hurt me.'

... because you have two lexical entries for la:.  
I think that one of them is redundant, since they
seem to be subject to the same constraints :-)

 I added the constraint to neg-adv-lex that its modifier's VAL.SUBJ
 must be nonempty, which forces /la:/ to attach to VPs, rather than S's
 and helps reduce the previously huge number of generated strings.

I'm surprised you didn't get this out of the box from
the customization script.  Something for me to look into...

 Lastly, I thought this would've been handled already, but I was
 getting very many spurious parses until I explicitly identified the
 COMPS element of modal-verb-lex with the second arg-st element. This
 ensured that the modal was only taking the VP as a complement, and not
 attaching in any number of other ways.

The linking types in the matrix associate ARG-ST elements with
semantic roles, but don't do the mapping to VAL features (this
is partially in anticipation of syntactically ergative languages).

 (To show understanding:) Were I to limit the grammar, I might consider
 using the 'opt' feature to the head-opt phrases indicating their
 subjects' "embededness" and constrain the second ARG-ST member of the modal 
 to this head feature, guaranteeing the verbal complement would be 'missing'
 its subject.

Interesting --- from an English perspective, I'd say that we expect
the modal to take a VP complement.  That is, the lower subject isn't
'dropped' --- it's not discharged at all.  I think your opt solution
might work, though it will be somewhat cumbersome to get the [OPT +]
value in just the right places.  Another possibility is to say that
the head-comp rule can apply (for the lower VP) when the subject is
non-empty, but that it puts 'unexpressed' as the value for synsem on
that subject.  This would be compatible with the head-opt-subj rule
(applying after head-comp, to go back on what we discussed earlier)
and with a control construction, but not with overt realization of the
subject.

Please let me know what you find out from your native speaker.
Note, though, that you're also currently parsing this:

y-i?dar   ?al-rajul-u  y-i?ra     ?al-rajul-u ?al-kita:b-a    da:
3MSG-can  the-man-NOM  3MSG-read  the-man-NOM the-book-ACC    this
'The man can the man read this book'

... which you probably don't want.  If this one is actually
ungrammatical:

y-i?dar   y-i?ra       ?al-rajul-u   ?al-kita:b-a   da:
3MSG-can  3MSG-read    the-man-NOM   the-book-ACC   this
? 'The man can read this book'

Then your OPT-based solution or my unexpressed-based should work.  If
it's actually grammatical, then you probably want to allow the
head-comp-phrase to apply to SUBJ non-empty elements and make the SUBJ
value unexpressed.  You'd need two version of the aux, then.  One
which takes an S complement and has an empty SUBJ value.  The other
should take a VP complement and identify its XARG with the VP's XARG.
(You can't just identify the SUBJ value and get away with one aux,
because in the VP case, that SUBJ value has an 'unexpressed' synsem on
it, which is incompatible with overt expression.) ... this is making
me think that there might be interesting connections to the
possibility of SVO/VSO alternations.  What happens with modals and SVO
order?  Can you get "S aux V O"?  What happens to the agreement in
that case?
  
Your semantics for "I can eat glass" are broken: There is
no connection between the _can_v_rel predicate and the _eat_v_rel
predicate.  The problem is that you picked a supertype that was too
high. Instead of trans-first-arg-raising-lex-item, you need
trans-first-arg-raising-lex-item-1.

To fix for next time:

	The issues mentioned above
	The generation weirdness (all those edges in the chart
		from rules)
	If time after that: get the word order/agreement dependency
	working
