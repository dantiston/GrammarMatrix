;;;Spanish 3/2/07

y := conj-lex &
  [ STEM < "y" >,
    SYNSEM.LKEYS.KEYREL.PRED "_and_coord_rel",
    CFORM "1" ] .

;;;; SPANISH NOUNS

dano := masc-noun-lex & 
  [ STEM < "dano" >,
    SYNSEM.LKEYS.KEYREL.PRED '_damage_n_rel ].

chico := masc-noun-lex &
  [ STEM < "chico" >,
    SYNSEM.LKEYS.KEYREL.PRED '_boy_n_rel ].

gato := masc-noun-lex &
  [ STEM < "gato" >,
    SYNSEM.LKEYS.KEYREL.PRED '_cat_n_rel ].

manzana := fem-noun-lex &
  [ STEM < "manzana" >,
    SYNSEM.LKEYS.KEYREL.PRED '_apple_n_rel ].

libro := masc-noun-lex &
  [ STEM < "libro" >,
    SYNSEM.LKEYS.KEYREL.PRED '_book_n_rel ].

vidrio := masc-noun-lex &
  [ STEM < "vidrio" >,
    SYNSEM.LKEYS.KEYREL.PRED '_glass_n_rel ].

nino := masc-noun-lex &
  [ STEM < "nino" >,
    SYNSEM.LKEYS.KEYREL.PRED '_child_n_rel ].

arbol := masc-noun-lex &
  [ STEM < "arbol" >,
    SYNSEM.LKEYS.KEYREL.PRED '_tree_n_rel ].

nina := fem-noun-lex &
  [ STEM < "nina" >,
    SYNSEM.LKEYS.KEYREL.PRED '_child_n_rel ].

vaca := fem-noun-lex &
  [ STEM < "vaca" >,
    SYNSEM.LKEYS.KEYREL.PRED '_cow_n_rel ].

pan := masc-noun-lex &
  [ STEM < "pan" >,
    SYNSEM.LKEYS.KEYREL.PRED '_bread_n_rel ].

coche := masc-noun-lex &
  [ STEM < "coche" >,
    SYNSEM.LKEYS.KEYREL.PRED '_car_n_rel ].

cuchara := fem-noun-lex &
  [ STEM < "cuchara" >,
    SYNSEM.LKEYS.KEYREL.PRED '_spoon_n_rel ].

chica := fem-noun-lex &
  [ STEM < "chica" >,
    SYNSEM.LKEYS.KEYREL.PRED '_girl_n_rel ].

perro := masc-noun-lex &
  [ STEM < "perro" >,
    SYNSEM.LKEYS.KEYREL.PRED '_dog_n_rel ].

cafe := masc-noun-lex &
  [ STEM < "cafe" >,
    SYNSEM.LKEYS.KEYREL.PRED '_coffee_n_rel ].

dinero := masc-noun-lex &
  [ STEM < "dinero" >,
    SYNSEM.LKEYS.KEYREL.PRED '_money_n_rel ].

hombre := masc-noun-lex &
  [ STEM < "hombre" >,
    SYNSEM.LKEYS.KEYREL.PRED '_man_n_rel ].

rana := fem-noun-lex &
  [ STEM < "rana" >,
    SYNSEM.LKEYS.KEYREL.PRED '_frog_n_rel ].

comida := fem-noun-lex &
  [ STEM < "comida" >,
    SYNSEM.LKEYS.KEYREL.PRED '_food_n_rel ].

lapiz := masc-noun-lex &
  [ STEM < "lapiz" >,
    SYNSEM.LKEYS.KEYREL.PRED '_pencil_n_rel ].

persona := fem-noun-lex &
  [ STEM < "persona" >,
    SYNSEM.LKEYS.KEYREL.PRED '_person_n_rel ].

caballo := masc-noun-lex &
  [ STEM < "caballo" >,
    SYNSEM.LKEYS.KEYREL.PRED '_horse_n_rel ].

leche := fem-noun-lex &
  [ STEM < "leche" >,
    SYNSEM.LKEYS.KEYREL.PRED '_milk_n_rel ].

;irregular noun plural ends in just -s not es as lex rule states
television := fem-noun-lex &
  [ STEM < "television" >,
    SYNSEM.LKEYS.KEYREL.PRED '_television_n_rel ].

mujer := fem-noun-lex &
  [ STEM < "mujer" >,
    SYNSEM.LKEYS.KEYREL.PRED '_woman_n_rel ].

oveja := fem-noun-lex &
  [ STEM < "oveja" >,
    SYNSEM.LKEYS.KEYREL.PRED '_sheep_n_rel ].

te := masc-noun-lex &
  [ STEM < "te" >,
    SYNSEM.LKEYS.KEYREL.PRED '_tea_n_rel ].

;;; SPANISH INTRANSITIVE VERBS

venir := iverb-lex &
  [ STEM < "venir" >,
    SYNSEM.LKEYS.KEYREL.PRED '_come_v_rel ].

morir := iverb-lex &
  [ STEM < "morir" >,
    SYNSEM.LKEYS.KEYREL.PRED '_die_v_rel ].


; HOW DOES ONE DEAL WITH INFLECTED REFLEXIVE FORMS???
;se_caerse := iverb-lex &
;  [ STEM < "se", "caerse" >,
;    SYNSEM.LKEYS.KEYREL.PRED '_fall_v_rel ].

ir := iverb-lex &
  [ STEM < "ir" >,
    SYNSEM.LKEYS.KEYREL.PRED '_go_v_rel ].

vivir := iverb-lex &
  [ STEM < "vivir" >,
    SYNSEM.LKEYS.KEYREL.PRED '_live_v_rel ].

jugar := iverb-lex &
  [ STEM < "jugar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_play_v_rel ].

dormir := iverb-lex &
  [ STEM < "dormir" >,
    SYNSEM.LKEYS.KEYREL.PRED '_sleep_v_rel ].

estornudar := iverb-lex &
  [ STEM < "estornudar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_sneeze_v_rel ].

esperar := iverb-lex &
  [ STEM < "esperar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_wait_v_rel ].

;se_despierta := iverb-lex &
;  [ STEM < "se" , "despierta" >,
;    SYNSEM.LKEYS.KEYREL.PRED '_wake+up_v_rel ].

caminar := iverb-lex &
  [ STEM < "caminar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_walk_v_rel ] .

;;; SPANISH TRANSITIVE VERBS

comprar := tverb-nopt-lex &
  [ STEM < "comprar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_buy_v_rel ].

beber := tverb-opt-lex &
  [ STEM < "beber" >,
    SYNSEM.LKEYS.KEYREL.PRED '_drink_v_rel ].

comer := tverb-opt-lex &
  [ STEM < "comer" >,
    SYNSEM.LKEYS.KEYREL.PRED '_eat_v_rel ].

;danar := tverb-nopt-lex &
danar := tverb-lex &
  [ STEM < "danar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_hurt_v_rel ].

herir := tverb-nopt-lex &
  [ STEM < "herir" >,
    SYNSEM.LKEYS.KEYREL.PRED '_hurt_2_v_rel ].

amar := tverb-nopt-lex &
  [ STEM < "amar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_love_v_rel ].

perseguir_1 := with-pp-a-verb-lex &
  [ STEM < "perseguir" >,
    SYNSEM.LKEYS.KEYREL.PRED '_chase_v_rel ].

;perseguir_2 := with-pronoun-object-verb-lex &
;  [ STEM < "perseguir" >,
;    SYNSEM.LKEYS.KEYREL.PRED '_chase_v_rel ].

;deliberately misspelled
;perseguir_3 := di-tverb-lex &
;  [ STEM < "persigar" >,
;    SYNSEM.LKEYS.KEYREL.PRED '_chase_v_rel ].

;perseguir_4 := tverb-lex &
;  [ STEM < "persiguir" >,
;    SYNSEM.LKEYS.KEYREL.PRED '_chase_v_rel ].

;;; this is an irregular verb which i have systematically misspelled
;;; so that the clitic pronoun lexical rule  can apply

hacer := di-tverb-lex &
  [ STEM < "hacer" >,
    SYNSEM.LKEYS.KEYREL.PRED '_do_v_rel ].

dar := di-tverb-lex &
  [ STEM < "dar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_give_v_rel ].

pintar := tverb-opt-lex &
  [ STEM < "pintar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_paint_v_rel ].

leer := tverb-opt-lex &
  [ STEM < "leer" >,
    SYNSEM.LKEYS.KEYREL.PRED '_read_v_rel ].

ver := tverb-nopt-lex &
  [ STEM < "ver" >,
    SYNSEM.LKEYS.KEYREL.PRED '_see_v_rel ].

quierer := tverb-nopt-lex &
  [ STEM < "quierer" >,
    SYNSEM.LKEYS.KEYREL.PRED '_want_v_rel ].

lavar := tverb-nopt-lex &
  [ STEM < "lavar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_wash_v_rel ].

mirar := tverb-nopt-lex &
  [ STEM < "mirar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_watch_v_rel ].

;;; SPANISH RAISING VERBS

poder := raising-verb-with-infinitive-complement &
  [ STEM < "poder" >,
    SYNSEM.LKEYS.KEYREL.PRED '_can_v_rel ].

;;; SPANISH CLAUSE-EMBEDDING VERBS

saber := declarative-clause-embedding-verb-lex &
  [ STEM < "saber" >,
    SYNSEM.LKEYS.KEYREL.PRED '_know_v_rel ].

pensar := declarative-clause-embedding-verb-lex &
  [ STEM < "pensar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_think_v_rel ].

preguntar := interrogative-clause-embedding-verb-lex &
  [ STEM < "preguntar" >,
    SYNSEM.LKEYS.KEYREL.PRED '_ask_v_rel ].

;;; SPANISH ADVERBS

no := neg-adv-lex &
  [ STEM < "no" >,
    SYNSEM.LKEYS.KEYREL.PRED '_neg_r_rel ].

;;; SPANISH PREPOSITIONS

a := prep-lex &
     [ STEM < "a" > ].


;;; SPANISH COMPLEMENTIZERS

que := embedded-declarative-complementizer-lex-item &
      [ STEM < "que" >,
	SYNSEM.LOCAL.CAT.HEAD.COMPLEMENTIZER-TYPE embedded-declarative-complementizer ].

si := embedded-interrogative-complementizer-lex-item &
      [ STEM < "si" >,
        SYNSEM.LOCAL.CAT.HEAD.COMPLEMENTIZER-TYPE embedded-interrogative-complementizer ].


;;; SPANISH DETERMINERS

el := non-dem-det-lex &
  [ STEM < "el" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX [ PNG [ NUM sg,
								  GEND masc ],
                                                            COG-ST uniq+fam+act]] > ,
             LKEYS [ KEYREL.PRED "exists_q_rel"]]].

la := non-dem-det-lex &
  [ STEM < "la" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX [ PNG [ NUM sg,
								  GEND fem ],
  							    COG-ST uniq+fam+act ]] > ,
             LKEYS [ KEYREL.PRED "exists_q_rel"]]].

los := non-dem-det-lex &
  [ STEM < "los" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX [ PNG [ NUM non-sg,
								GEND masc ],
							    COG-ST uniq+fam+act ]] > ,
             LKEYS [ KEYREL.PRED "exists_q_rel"]]].

las := non-dem-det-lex &
  [ STEM < "las" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX [ PNG [ NUM non-sg,
								GEND fem ],
 							    COG-ST uniq+fam+act ]]> ,
             LKEYS [ KEYREL.PRED "exists_q_rel"]]].

un := non-dem-det-lex &
  [ STEM < "un" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX [ PNG [ NUM sg,
								GEND masc ],
							    COG-ST type-id ]] > ,
	     LKEYS [ KEYREL.PRED "exists_q_rel"]]].

una := non-dem-det-lex &
  [ STEM < "una" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX [ PNG [ NUM sg,
								  GEND fem ],
							    COG-ST type-id ]] >,
             LKEYS [ KEYREL.PRED "exists_q_rel"]]].

;;; "THIS"
este := dem-det-lex &
  [ STEM < "este" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
								GEND masc ]] >,
	     LKEYS [ KEYREL.PRED "exists_q_rel",
	             ALTKEYREL.PRED proximal+dem_a_rel ]]].

esta := dem-det-lex &
  [ STEM < "este" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
								GEND fem ]] >,
             LKEYS [ KEYREL.PRED "exists_q_rel",
	             ALTKEYREL.PRED proximal+dem_a_rel ]]].

estos := dem-det-lex &
  [ STEM < "estos" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM non-sg,
								GEND masc ]] >,
             LKEYS [ KEYREL.PRED "exists_q_rel",
	             ALTKEYREL.PRED proximal+dem_a_rel ]]].

estas := dem-det-lex &
  [ STEM < "estas" >,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM non-sg,
								GEND fem ]] >,
	     LKEYS [ KEYREL.PRED "exists_q_rel",
	             ALTKEYREL.PRED proximal+dem_a_rel ]]].

;;; for neuter  cases; RESEARCH THIS MORE!!!

esto := dem-det-lex &
  [ STEM < "esto" >,
    SYNSEM.LKEYS [ ALTKEYREL.PRED proximal+dem_a_rel,
                   KEYREL.PRED "exists_q_rel" ]].

;;; "THAT"

ese := dem-det-lex &
  [ STEM < "ese">,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
								GEND masc ]] >,
	     LKEYS [ ALTKEYREL.PRED hearer+dem_a_rel,
                     KEYREL.PRED "exists_q_rel" ]] ].

esa := dem-det-lex &
  [ STEM < "esa">,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
								GEND fem ]] >,
	     LKEYS [ ALTKEYREL.PRED hearer+dem_a_rel,
                     KEYREL.PRED "exists_q_rel" ]] ].

esos := dem-det-lex &
  [ STEM < "esos">,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM non-sg,
								GEND masc ]] >,
	     LKEYS [ ALTKEYREL.PRED hearer+dem_a_rel,
                     KEYREL.PRED "exists_q_rel" ]] ].

esas := dem-det-lex &
  [ STEM < "esas">,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM non-sg,
								GEND fem ]] >,
	     LKEYS [ ALTKEYREL.PRED hearer+dem_a_rel,
                     KEYREL.PRED "exists_q_rel" ]] ]. 

;;; for neuter  cases; RESEARCH THIS MORE!!!

eso := dem-det-lex &
  [ STEM < "eso">,
    SYNSEM.LKEYS [ ALTKEYREL.PRED hearer+dem_a_rel,
                   KEYREL.PRED "exists_q_rel" ]].

;;; "THAT ONE OVER THERE"

aquel := dem-det-lex &
  [ STEM < "aquel">,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
								GEND masc ]] >,
	     LKEYS.ALTKEYREL.PRED remote+dem_a_rel ]].

aquella := dem-det-lex &
  [ STEM < "aquella">,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM sg,
								GEND fem ]] >,
	     LKEYS [ ALTKEYREL.PRED remote+dem_a_rel,
                     KEYREL.PRED "exists_q_rel" ]] ].

aquellos := dem-det-lex &
  [ STEM < "aquellos">,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM non-sg,
								GEND masc ]] >,
	     LKEYS [ ALTKEYREL.PRED remote+dem_a_rel,
                     KEYREL.PRED "exists_q_rel" ]] ].


aquellas := dem-det-lex &
  [ STEM < "aquellas">,
    SYNSEM [ LOCAL.CAT.VAL.SPEC < [ LOCAL.CONT.HOOK.INDEX.PNG [ NUM non-sg,
								GEND fem ]] >,
	     LKEYS [ ALTKEYREL.PRED remote+dem_a_rel,
                     KEYREL.PRED "exists_q_rel" ]] ].


;;; for neuter  cases; RESEARCH THIS MORE!!!

aquello := dem-det-lex &
  [ STEM < "aquello">,
    SYNSEM.LKEYS [ ALTKEYREL.PRED remote+dem_a_rel,
                   KEYREL.PRED "exists_q_rel" ]].

;;; PERSONAL (SUBJECT) PRONOUNS


yo := personal-pronoun-lex &
  [ STEM < "yo" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER first,
				       NUM sg ]].

tu := personal-pronoun-lex &
  [ STEM < "tu" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
				       NUM sg ]].

vos := personal-pronoun-lex &
  [ STEM < "vos" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
				       NUM sg ]].

usted := personal-pronoun-lex &
  [ STEM < "usted" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
				       NUM sg ]].

el_2 := personal-pronoun-lex &
  [ STEM < "el" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER third,
				       NUM sg,
				       GEND masc ]].

ella := personal-pronoun-lex &
  [ STEM < "ella" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER third,
				       NUM sg,
				       GEND fem ]].

;neuter hasn't been defined
;ello := personal-pronoun-lex &
;  [ STEM < "ello" >,
;    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER first,
;				       NUM non-sg,
;				       GEND neut ]].

nosotros := personal-pronoun-lex &
  [ STEM < "nosotros" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER first,
				       NUM non-sg,
				       GEND masc ]].

nosotras := personal-pronoun-lex &
  [ STEM < "nosotras" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER first,
				       NUM non-sg,
				       GEND fem ]].

vosotros := personal-pronoun-lex &
  [ STEM < "vosotros" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
				       NUM non-sg,
				       GEND masc ]].

vosotras := personal-pronoun-lex &
  [ STEM < "vosotras" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
				       NUM non-sg,
				       GEND fem ]].

ustedes := personal-pronoun-lex &
  [ STEM < "ustedes" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
				       NUM non-sg ]].

ellos := personal-pronoun-lex &
  [ STEM < "ellos" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER third,
				       NUM non-sg,
				       GEND masc ]].

ellas := personal-pronoun-lex &
  [ STEM < "ellas" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE nom,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER third,
				       NUM non-sg,
				       GEND fem ]].

les_3 := personal-pronoun-lex &
  [ STEM < "les" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE a,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER third,
				       NUM non-sg ]].
;formal
;les_2 := personal-pronoun-lex &
;  [ STEM < "les" >,
;    SYNSEM.LOCAL.CAT.HEAD.CASE a,
;    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
;				       NUM non-sg ]].

;familiar
;os_2 := personal-pronoun-lex &
;  [ STEM < "os" >,
;    SYNSEM.LOCAL.CAT.HEAD.CASE a,
;    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
;				       NUM non-sg ]].

nos := personal-pronoun-lex &
  [ STEM < "nos" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE a,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER first,
                                       NUM non-sg ]].

me_a := personal-pronoun-lex &
  [ STEM < "me" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE a,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER first,
				       NUM sg ]].
;familiar
te_2 := personal-pronoun-lex &
  [ STEM < "te" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE a,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
				       NUM sg ]].

;familiar
le_3 := personal-pronoun-lex &
  [ STEM < "le" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE a,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER third,
				       NUM sg ]].

;formal
;le_2 := personal-pronoun-lex &
;  [ STEM < "le" >,
;    SYNSEM.LOCAL.CAT.HEAD.CASE a,
;    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER second,
;				       NUM sg ]].


me_acc := personal-pronoun-lex &
  [ STEM < "me" >,
    SYNSEM.LOCAL.CAT.HEAD.CASE acc,
    SYNSEM.LOCAL.CONT.HOOK.INDEX.PNG [ PER first,
				       NUM sg ]].
;ADVERBS
rapidamente := adverb-lex &
   [ STEM < "rapidamente" >, 
     SYNSEM.LKEYS.KEYREL.PRED "_fast_r_rel" ].

;ADJECTIVES
hambriento := adjective-lex &
   [ STEM < "hambriento" >,
     INFLECTED -,
     SYNSEM.LKEYS.KEYREL.PRED "_hungry_a_rel"].


